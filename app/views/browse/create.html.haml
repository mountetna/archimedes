= content_for :title, "Timur - Create - #{@name}"

#model
  #model_header
    = @model.name
    #edit{ onclick: "javascript: show_edit()" }
      &#x270e;
    #cancel{ onclick: "javascript: cancel_edit()" }
      &#x2717;
    #approve{ onclick: "javascript: submit_edit()" }
      &#x2713;
  #names
    - @model.display_attributes.each do |name,att|
      .attribute{ title: att.desc }
        = att.display_name
  %form#values{ action: update_model_path, method: :post, enctype: "multipart/form-data" }
    = hidden_field_tag :authenticity_token, form_authenticity_token
    %input{ type: :hidden, name: :id, value: @record.id }
    %input{ type: :hidden, name: :model, value: @model.name }
    - @model.display_attributes.each do |name,att|
      .value
        - if att.is_a? Magma::DocumentAttribute
          %a{ href: @record.send(att.name) } #{ File.basename(@record.facs_file.current_path) }
        - elsif att.is_a?(Magma::ForeignKeyAttribute) || att.is_a?(Magma::ChildAttribute)
          &nbsp;
        - elsif att.is_a?(Magma::CollectionAttribute)
          - @record.send(att.name).each do |item|
            %a{ href: browse_model_path( model: item.model.name.snake_case, name: item.identifier ) } item.identifier
        - else
          ! #{ @record.send(att.name) }&nbsp;
      .edit_value
        - if att.is_a? Magma::DocumentAttribute
          %input{ type: :file, name: "values[#{att.name}]" }
        - elsif att.is_a?(Magma::ForeignKeyAttribute) || att.is_a?(Magma::ChildAttribute)
          [ link ]
        - elsif att.is_a?(Magma::CollectionAttribute)
          - @record.send(att.name).each do |item|
            X item.identifier
          %a{ href: create_model_path( model: att.name, @model.name.snake_case.to_sym => @record.id ) } Add #{att.name}
        - else
          %input{ type: :text, name: "values[#{att.name}]", value: @record.send(att.name) }
